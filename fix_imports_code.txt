// Add this code after updating the package name in Cargo.toml (around line 643)

        // Fix imports in source files to use the new package name
        let src_dir = component_dir.join("src");
        if src_dir.exists() {
            println!("{}", "Updating imports to use the new package name...".blue());
            
            // Walk through all Rust files in the src directory
            for entry in walkdir::WalkDir::new(&src_dir)
                .into_iter()
                .filter_map(|e| e.ok())
                .filter(|e| e.file_type().is_file()) {
                    
                let path = entry.path();
                if let Some(ext) = path.extension() {
                    if ext == "rs" {
                        // Read file content
                        if let Ok(content) = fs::read_to_string(path) {
                            // Replace imports like "use client::*;" with "use app_client::*;"
                            if let Ok(re) = regex::Regex::new(&format!(r"use\s+{}(::|\s+)", regex::escape(&component_name))) {
                                let new_package_name = format!("{}_{}", project_name, component_name);
                                let updated_content = re.replace_all(&content, format!("use {}{}", new_package_name, "$1"));
                                
                                // Write updated content back to file if changes were made
                                if content != updated_content {
                                    if fs::write(path, updated_content.as_bytes()).is_ok() {
                                        println!("  Fixed imports in: {}", path.display());
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
